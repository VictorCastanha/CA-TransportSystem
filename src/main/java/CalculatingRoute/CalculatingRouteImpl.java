// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CalculatingRoute.proto

package CalculatingRoute;

public final class CalculatingRouteImpl {
  private CalculatingRouteImpl() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CalculatingRoute_requestAddress_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CalculatingRoute_requestAddress_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CalculatingRoute_lookingAddress_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CalculatingRoute_lookingAddress_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CalculatingRoute_addressDistance_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CalculatingRoute_addressDistance_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026CalculatingRoute.proto\022\020CalculatingRou" +
      "te\"8\n\016requestAddress\022\025\n\rstringAddress\030\001 " +
      "\001(\t\022\017\n\007ZIPCode\030\002 \001(\t\")\n\016lookingAddress\022\027" +
      "\n\017looking_address\030\001 \001(\t\")\n\017addressDistan" +
      "ce\022\026\n\016destination_km\030\001 \001(\0052\302\001\n\020Calculati" +
      "ngRoute\022T\n\014writeAddress\022 .CalculatingRou" +
      "te.requestAddress\032 .CalculatingRoute.loo" +
      "kingAddress\"\000\022X\n\017displayDistance\022 .Calcu" +
      "latingRoute.requestAddress\032!.Calculating" +
      "Route.addressDistance\"\000B*\n\020CalculatingRo" +
      "uteB\024CalculatingRouteImplP\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_CalculatingRoute_requestAddress_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CalculatingRoute_requestAddress_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CalculatingRoute_requestAddress_descriptor,
        new java.lang.String[] { "StringAddress", "ZIPCode", });
    internal_static_CalculatingRoute_lookingAddress_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CalculatingRoute_lookingAddress_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CalculatingRoute_lookingAddress_descriptor,
        new java.lang.String[] { "LookingAddress", });
    internal_static_CalculatingRoute_addressDistance_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CalculatingRoute_addressDistance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CalculatingRoute_addressDistance_descriptor,
        new java.lang.String[] { "DestinationKm", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
